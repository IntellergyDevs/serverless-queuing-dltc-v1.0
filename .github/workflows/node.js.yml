name: Node.js CI/CD

on:
  push:
    branches:
      - dev
      - main
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build and test with coverage
        run: npm run build --if-present && npm run test:coverage

  python-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt  # Assuming you have requirements.txt with your dependencies

      - name: Run script and tests
        run: |
          python app.py
          python test_script.py

  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: python-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set Node.js version
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Run SonarQube scan
        run: sonar-scanner
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-staging:
    runs-on: ubuntu-latest
    needs: sonarqube-scan
    steps:
      - name: Deploy to Staging
        run: |
          # Your actual staging deployment commands here

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    steps:
      # Include steps for manual approval if necessary, using environment protection rules
      - name: Deploy to Production
        run: |
          # Your actual production deployment commands here
