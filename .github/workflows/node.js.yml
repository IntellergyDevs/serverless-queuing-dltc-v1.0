name: Node.js CI/CD

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev
    paths:
      - 'frontend/**'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Use the latest LTS version available (update if needed)
      - name: Install dependencies
        run: |
          cd frontend  # Change to the frontend directory
          npm install
      - name: Build and test
        run: |
          cd frontend  # Change to the frontend directory
          npm run build --if-present && npm test

  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up SonarQube scan
        uses: SonarSource/sonarcloud-github-action@v1
        with:
          projectBaseDir: ./frontend # Set this to the root directory of your project if different
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # Provided by GitHub, no need to create a secret
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }} # Your SonarQube token stored as a secret

  deploy-staging:
    runs-on: ubuntu-latest
    needs: sonarqube-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Deploy to Staging
        run: |
          # Your staging deployment script or commands

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Manual Approval
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: 'Manual approval for production deployment'

      - name: Deploy to Production
        run: |
          # Your production deployment script or commands
