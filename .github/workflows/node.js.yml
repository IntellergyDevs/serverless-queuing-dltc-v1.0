name: Node.js CI/CD

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x] # Use the latest LTS version if 16.x is not the latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: 'current' # Use 'current' to get the latest Node.js version
    - name: Install dependencies
      run: npm ci
    - name: Build and test
      run: npm run build --if-present && npm test

  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
    - name: SonarQube Scan
      uses: sonarsource/sonarcloud-github-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        SONAR_PROJECT_KEY: 'your-sonar-project-key'
        SONAR_ORGANIZATION: 'your-sonar-organization'

  deploy-staging:
    runs-on: ubuntu-latest
    needs: sonarqube-scan
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
    - name: Deploy to Staging
      run: |
        # Your staging deployment script or commands

  deploy-prod:
    runs-on: ubuntu-latest
    needs: deploy-staging
    if: github.event_name == 'workflow_run' && github.event.workflow_run.event == 'push' && github.ref == 'refs/heads/main'

    steps:
    - name: Manual Approval
      uses: stefanzweifel/git-auto-commit-action@v4
      with:
        commit_message: 'Manual approval for production deployment'
    
    - name: Deploy to Production
      run: |
        # Your production deployment script or commands
