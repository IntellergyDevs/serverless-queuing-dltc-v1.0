name: Python CI/CD

on:
  push:
  pull_request:
    branches:
      - dev
      - 'flask-demo-app/**/*'  # Updated to include pull requests targeting the 'flask-demo-app' folder
      - 'flask-demo-app/**/*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install dependencies
        run: npm install

      - name: Build and test with coverage
        run: npm run build --if-present && npm run test:coverage

  python-test:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
@@ -25,19 +46,25 @@ jobs:
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r flask-demo-app/requirements.txt  # Assuming you have requirements.txt inside the flask-demo-app folder
          python -m pip install -r FLASH-DEMO-APP/requirements.txt
      - name: Build and test with coverage
      - name: Run script and tests
        run: |
          python flask-demo-app/test_script.py  # Adjust the path accordingly
          python FLASH-DEMO-APP/app.py
          python FLASH-DEMO-APP/test_script.py
  sonarqube-scan:
    runs-on: ubuntu-latest
    needs: build
    needs: python-test
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install SonarScanner
        run: |
          sudo apt-get update
          sudo apt-get install -y openjdk-11-jre
          sudo wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-4.6.2.2472-linux.zip
          sudo unzip sonar-scanner-cli-4.6.2.2472-linux.zip -d /opt
          echo 'export PATH=$PATH:/opt/sonar-scanner-cli-4.6.2.2472-linux/bin' >> $GITHUB_ENV
      - name: Run SonarQube scan
        run: sonar-scanner
